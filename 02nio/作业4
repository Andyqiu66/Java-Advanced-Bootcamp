堆内存越大，在内存中可容纳的对象数越多，GC的次数会下降，但是单次GC的时间会变长
串行GC，针对比较小的堆内存比较合适，收集器工作的时候，会将应用线程完全暂停（stop the world），使用的比较少
并行GC，是JDK8默认的垃圾回收器，最大的优点是采用多个线程来扫描和压缩堆，不管执行minor GC和full GC也会暂停应用线程，在堆内存比较小的情况下,yong GC和串行GC的young GC执行时间差不多，但是老年代
时会优于串行GC
CMS，将垃圾回收分成了几个不同的步骤：初始化标记，并发标记，并发预清理，最终标记，并发清理，并发重置，在这几个过程中，部分阶段是可以和应用程序并行执行的，这样可以减少垃圾回收的时间。老年代STW明显降低
G1 GC可以指定暂停的时间，但是在极端情况下，会退化成串行回收器，这个会导致暂停时间可能比使用串行回收器时间还要长。

在选择GC算法时，需要根据系统设计的目的进行选择，如果需要提高系统响应，则选择CMS，提高吞吐量选择并行GC，配置可预估的暂停时间选择G1
